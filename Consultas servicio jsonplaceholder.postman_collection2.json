{
	"info": {
		"_postman_id": "a7bfc3bd-5858-41ad-adaa-744fb12c1b80",
		"name": "Consultas servicio jsonplaceholder",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Consultar usuario por ID existente",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Confirm correct ID\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"\r",
							"    pm.expect(JSON.stringify(jsonData[0].id)).to.eql(pm.environment.get(\"IdUser\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URI}}/users?id={{IdUser}}",
					"host": [
						"{{URI}}"
					],
					"path": [
						"users"
					],
					"query": [
						{
							"key": "id",
							"value": "{{IdUser}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Consultar usuario por id existente y username correcto",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Confirm correct ID and userName\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"\r",
							"    pm.expect(JSON.stringify(jsonData[0].id)).to.eql(pm.environment.get(\"IdUser\"));\r",
							"\r",
							"    pm.expect(jsonData[0].name).to.eql(pm.environment.get(\"userName\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URI}}/users?id={{IdUser}}&userName={{userName}}&",
					"host": [
						"{{URI}}"
					],
					"path": [
						"users"
					],
					"query": [
						{
							"key": "id",
							"value": "{{IdUser}}"
						},
						{
							"key": "userName",
							"value": "{{userName}}"
						},
						{
							"key": "",
							"value": null
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Consultar usuario validar formato de email",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Email format match\", function () {\r",
							"  var jsonData = pm.response.json();\r",
							"  //expresion regular para validar formato de email \r",
							"  pm.expect(jsonData[0].email).to.match(/^[-\\w.%+]{1,64}@(?:[A-Z0-9-]{1,63}\\.){1,125}[A-Z]{2,63}$/i)\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URI}}/users?id={{IdUser}}",
					"host": [
						"{{URI}}"
					],
					"path": [
						"users"
					],
					"query": [
						{
							"key": "id",
							"value": "{{IdUser}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Consultar album insertando id con valor en negativo",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify empty response\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"\r",
							"    pm.expect(jsonData).not.have.property('id');\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URI}}/albums?id=-1",
					"host": [
						"{{URI}}"
					],
					"path": [
						"albums"
					],
					"query": [
						{
							"key": "id",
							"value": "-1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Consultar comments por email no existente",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify empty response\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"\r",
							"    pm.expect(jsonData[0].email).not.have.property('email');\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URI}}/comments?email={{emailFail}}",
					"host": [
						"{{URI}}"
					],
					"path": [
						"comments"
					],
					"query": [
						{
							"key": "email",
							"value": "{{emailFail}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Consultar album por title existente",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify empty response\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"\r",
							"    pm.expect(jsonData).not.have.property('title');\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URI}}/albums?title={{titleFail}}",
					"host": [
						"{{URI}}"
					],
					"path": [
						"albums"
					],
					"query": [
						{
							"key": "title",
							"value": "{{titleFail}}"
						}
					]
				}
			},
			"response": []
		}
	]
}